/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';
import {
  BasicSetting,
} from './utils/utils';

export namespace Components {
  interface BasicCard {
    /**
    * The text to be displayed on the card
    */
    'cardText': string;
    /**
    * The title for the card
    */
    'cardTitle': string;
    'changeState': (state: any) => Promise<void>;
    /**
    * If the card should be collapsed
    */
    'collapsible': boolean;
    /**
    * Settings to be shown in card
    */
    'settings': BasicSetting[];
  }
  interface BasicCheckbox {
    /**
    * Function to handle input change and affect state
    */
    'change': (event: Event) => void;
    /**
    * The current value for the checkbox
    */
    'checked': boolean;
    /**
    * The label for the checkbox
    */
    'label': string;
    /**
    * The tooltip for the checkbox
    */
    'tooltip': string;
  }
  interface BasicString {
    /**
    * Function to handle input change and affect state
    */
    'change': (event: Event) => void;
    /**
    * The current value for the input
    */
    'current': string;
    /**
    * The label for the input
    */
    'label': string;
    /**
    * The tooltip for the input
    */
    'tooltip': string;
  }
  interface TestComponent {}
}

declare global {


  interface HTMLBasicCardElement extends Components.BasicCard, HTMLStencilElement {}
  var HTMLBasicCardElement: {
    prototype: HTMLBasicCardElement;
    new (): HTMLBasicCardElement;
  };

  interface HTMLBasicCheckboxElement extends Components.BasicCheckbox, HTMLStencilElement {}
  var HTMLBasicCheckboxElement: {
    prototype: HTMLBasicCheckboxElement;
    new (): HTMLBasicCheckboxElement;
  };

  interface HTMLBasicStringElement extends Components.BasicString, HTMLStencilElement {}
  var HTMLBasicStringElement: {
    prototype: HTMLBasicStringElement;
    new (): HTMLBasicStringElement;
  };

  interface HTMLTestComponentElement extends Components.TestComponent, HTMLStencilElement {}
  var HTMLTestComponentElement: {
    prototype: HTMLTestComponentElement;
    new (): HTMLTestComponentElement;
  };
  interface HTMLElementTagNameMap {
    'basic-card': HTMLBasicCardElement;
    'basic-checkbox': HTMLBasicCheckboxElement;
    'basic-string': HTMLBasicStringElement;
    'test-component': HTMLTestComponentElement;
  }
}

declare namespace LocalJSX {
  interface BasicCard {
    /**
    * The text to be displayed on the card
    */
    'cardText'?: string;
    /**
    * The title for the card
    */
    'cardTitle'?: string;
    /**
    * If the card should be collapsed
    */
    'collapsible'?: boolean;
    /**
    * Settings to be shown in card
    */
    'settings'?: BasicSetting[];
  }
  interface BasicCheckbox {
    /**
    * Function to handle input change and affect state
    */
    'change'?: (event: Event) => void;
    /**
    * The current value for the checkbox
    */
    'checked'?: boolean;
    /**
    * The label for the checkbox
    */
    'label'?: string;
    /**
    * The tooltip for the checkbox
    */
    'tooltip'?: string;
  }
  interface BasicString {
    /**
    * Function to handle input change and affect state
    */
    'change'?: (event: Event) => void;
    /**
    * The current value for the input
    */
    'current'?: string;
    /**
    * The label for the input
    */
    'label'?: string;
    /**
    * The tooltip for the input
    */
    'tooltip'?: string;
  }
  interface TestComponent {}

  interface IntrinsicElements {
    'basic-card': BasicCard;
    'basic-checkbox': BasicCheckbox;
    'basic-string': BasicString;
    'test-component': TestComponent;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'basic-card': LocalJSX.BasicCard & JSXBase.HTMLAttributes<HTMLBasicCardElement>;
      'basic-checkbox': LocalJSX.BasicCheckbox & JSXBase.HTMLAttributes<HTMLBasicCheckboxElement>;
      'basic-string': LocalJSX.BasicString & JSXBase.HTMLAttributes<HTMLBasicStringElement>;
      'test-component': LocalJSX.TestComponent & JSXBase.HTMLAttributes<HTMLTestComponentElement>;
    }
  }
}


